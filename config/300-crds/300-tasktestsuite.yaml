apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tasktestsuites.tekton.dev
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: "devel"
    version: "devel"
spec:
  group: tekton.dev
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      "schema":
        "openAPIV3Schema":
          description: |-
            TaskTestSuite represents a collection of test cases for verifying the
            functional requirements of one or more Tasks. TaskTestSuites execute when
            TaskTestSuiteRuns are created, which provide the input and output resources
            the TaskTest requires.
          type: object
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the TaskTestSuite from the client
              type: object
              required:
                - taskTests
              properties:
                taskTests:
                  description: |-
                    TaskTests is a list of the TaskTests, which make up the
                    suite. TaskTests can be added to this list by reference or be defined
                    directly inside the list.
                  type: array
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      allTriesMustSucceed:
                        description: |-
                          The default behavior is that if out of all the tries at least one
                          succeeds then the TaskTestRun is marked as successful. But if the field
                          allTriesMustSucceed is set to true then the TaskTestRun is marked as
                          successful if and only if all of its tries come up successful.
                        type: boolean
                      name:
                        description: Name is the identifier for a test in the context of this suite.
                        type: string
                      onError:
                        description: |-
                          OnError specifies, how the suite will behave, if this test fails.
                          "StopSchedulingAndFail" means, that no new test will be scheduled but
                          tests already running will be able to finish, after which the suite
                          execution is marked as a failure. "CancelRunningAndFail"
                          means, that all other unfinished tests will be cancelled immediately and
                          the suite execution is marked as a failure. "Continue" means, that if the
                          test fails the
                          suite is still executed as if the test succeeded. This field defaults to
                          "CancelRunningAndFail" if unset
                        type: string
                      retries:
                        description: |-
                          Retries represents how many times this TaskTestRun should be retried in
                          the event of test failure.
                        type: integer
                      taskTestRef:
                        description: |-
                          TaskTestRef is a reference to an existing Task.
                          Either this or TaskTestSpec must be set, if neither or both are
                          set then validation of this SuiteTest fails.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                      taskTestSpec:
                        description: |-
                          TaskTestSpec is a specification of a task test
                          Either this or TaskTestRef must be set, if neither or both are
                          set then validation of this SuiteTest fails.
                        type: object
                        properties:
                          expects:
                            description: |-
                              Expects contains the data, which the TaskTestRun controller will
                              use to check, whether a TaskTestRun was successful or not.
                              If this field is left empty, then the TaskTestRun is deemed successful,
                              if the TaskRun completes without a failure occurring.
                            type: object
                            properties:
                              completionWithin:
                                description: |-
                                  CompletionWithin expresses, that a test is only successful, if it
                                  completes within that duration. Since the aim is to measure the
                                  performance of the test as consistently as possible, this value
                                  is not checked against the difference of the start time and
                                  completion time of the task run but against the sum of the
                                  differences of the startedAt and finishedAt timestamps of the
                                  individual steps, as this cuts out Kubernetes overhead like pod
                                  scheduling time.
                                type: string
                              env:
                                description: |-
                                  List of environment variables with expected values to be checked for in
                                  all of the Task's Steps.
                                type: array
                                items:
                                  description: EnvVar represents an environment variable present in a Container.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: |-
                                        Variable references $(VAR_NAME) are expanded
                                        using the previously defined environment variables in the container and
                                        any service environment variables. If a variable cannot be resolved,
                                        the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded, regardless of whether the variable
                                        exists or not.
                                        Defaults to "".
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                                      type: object
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                              default: ""
                                            optional:
                                              description: Specify whether the ConfigMap or its key must be defined
                                              type: boolean
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: |-
                                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's namespace
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key of the secret to select from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                              default: ""
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                                          x-kubernetes-map-type: atomic
                                x-kubernetes-list-type: atomic
                              fileSystemContents:
                                description: |-
                                  FileSystemContents is a list step names, each one paired with a list of
                                  expected file system objects.
                                type: array
                                items:
                                  description: |-
                                    ExpectedStepFileSystemContent contains the name of a step as declared in the
                                    Task under Test and a list of file system objects.

                                    The rules for these file system objects are as follows: If the Type is
                                    not set it will default to "AnyObjectType". If Type is set to a type other
                                    than "TextFile", then Content must be left empty. Path value must be an
                                    absolute path, variable substitution for workspace paths is possible.
                                  type: object
                                  required:
                                    - stepName
                                  properties:
                                    objects:
                                      description: |-
                                        Objects is a list of File System Objects, which are expected to be
                                        in the container's file system after the step has finished executing (or
                                        in the case of Type being set to "None" expected to not be there). If
                                        this field is left empty, then it will default to "AnyObjectType".
                                      type: array
                                      items:
                                        description: |-
                                          FileSystemObject describes a file system object by giving a path to the
                                          object, the type of the object and in case it is a text file the contents of
                                          that text file. Path value must be an absolute path, variable substitution for workspace paths is possible.
                                        type: object
                                        required:
                                          - path
                                        properties:
                                          content:
                                            description: |-
                                              The content of the file system object. Setting this value is only
                                              acceptable, if the field Type is set to 'TextFile'.
                                            type: string
                                          path:
                                            description: Path is the path to this file system object
                                            type: string
                                          type:
                                            description: |-
                                              Type is the type of this file system object. The values, which are
                                              acceptable for this field, are defined in the enum FileSystemObjectType
                                            type: string
                                      x-kubernetes-list-map-keys:
                                        - path
                                      x-kubernetes-list-type: map
                                    stepName:
                                      description: |-
                                        StepName is the name of the step, whose file system will be checked for
                                        the objects in FileSystemObject.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - stepName
                                x-kubernetes-list-type: map
                              results:
                                description: |-
                                  Results is a list of Results declared in the Task under test and the
                                  values the Task is expected to fill these Results with given the input
                                  data.
                                type: array
                                items:
                                  description: TaskResult used to describe the results of a task
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    description:
                                      description: Description is a human-readable description of the result
                                      type: string
                                    name:
                                      description: Name the given name
                                      type: string
                                    properties:
                                      description: Properties is the JSON Schema properties to support key-value pairs results.
                                      type: object
                                      additionalProperties:
                                        description: PropertySpec defines the struct for object keys
                                        type: object
                                        properties:
                                          type:
                                            description: |-
                                              ParamType indicates the type of an input parameter;
                                              Used to distinguish between a single string and an array of strings.
                                            type: string
                                    type:
                                      description: |-
                                        Type is the user-specified type of the result. The possible type
                                        is currently "string" and will support "array" in following work.
                                      type: string
                                    value:
                                      description: Value the expression used to retrieve the value of the result from an underlying Step.
                                      x-kubernetes-preserve-unknown-fields: true
                                x-kubernetes-list-type: atomic
                              stepEnvs:
                                description: |-
                                  List of Step environments, where expected values for environment
                                  variables can be individually defined for all of the Task's Steps.
                                  Expected values defined here will take precedence over expectations
                                  defined in 'env'.
                                type: array
                                items:
                                  description: |-
                                    StepEnv contains the name of a step as defined the manifest of the Task under
                                    test and a list of environment variable declarations to be set for this step.
                                  type: object
                                  required:
                                    - stepName
                                  properties:
                                    env:
                                      description: List of environment variables to set for this step.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                    default: ""
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret in the pod's namespace
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                    default: ""
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                                x-kubernetes-map-type: atomic
                                      x-kubernetes-list-type: atomic
                                    stepName:
                                      description: StepName is the name of the step for whom these environment variables will be set.
                                      type: string
                                x-kubernetes-list-type: atomic
                              successReason:
                                description: |-
                                  SuccessReason is the reason, with which the TaskRuns initiated by this
                                  test are expected to be marked upon completion.
                                type: string
                              successStatus:
                                description: |-
                                  SuccessStatus reports, whether the TaskRuns initiated by this test are
                                  expected to succeed. This is useful for testing cases in which the Task
                                  is supposed to fail because of a faulty input.
                                type: boolean
                          inputs:
                            description: Inputs represents the test data for executing the test case.
                            type: object
                            properties:
                              env:
                                description: List of environment variables to set in all of the Task's Steps.
                                type: array
                                items:
                                  description: EnvVar represents an environment variable present in a Container.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: |-
                                        Variable references $(VAR_NAME) are expanded
                                        using the previously defined environment variables in the container and
                                        any service environment variables. If a variable cannot be resolved,
                                        the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded, regardless of whether the variable
                                        exists or not.
                                        Defaults to "".
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                                      type: object
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                              default: ""
                                            optional:
                                              description: Specify whether the ConfigMap or its key must be defined
                                              type: boolean
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: |-
                                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's namespace
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key of the secret to select from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                This field is effectively required, but due to backwards compatibility is
                                                allowed to be empty. Instances of this type with an empty value here are
                                                almost certainly wrong.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                              default: ""
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                                          x-kubernetes-map-type: atomic
                                x-kubernetes-list-type: atomic
                              params:
                                description: Parameters declares parameters passed to the task under test.
                                type: array
                                items:
                                  description: Param declares an ParamValues to use for the parameter called name.
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      type: string
                                    value:
                                      x-kubernetes-preserve-unknown-fields: true
                                x-kubernetes-list-type: atomic
                              stepEnvs:
                                description: |-
                                  List of Step environments, where environment variables can be individually
                                  set for each one of the Task's Steps. Values set here will overwrite
                                  values set in 'env'.
                                type: array
                                items:
                                  description: |-
                                    StepEnv contains the name of a step as defined the manifest of the Task under
                                    test and a list of environment variable declarations to be set for this step.
                                  type: object
                                  required:
                                    - stepName
                                  properties:
                                    env:
                                      description: List of environment variables to set for this step.
                                      type: array
                                      items:
                                        description: EnvVar represents an environment variable present in a Container.
                                        type: object
                                        required:
                                          - name
                                        properties:
                                          name:
                                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                                            type: string
                                          value:
                                            description: |-
                                              Variable references $(VAR_NAME) are expanded
                                              using the previously defined environment variables in the container and
                                              any service environment variables. If a variable cannot be resolved,
                                              the reference in the input string will be unchanged. Double $$ are reduced
                                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                              Escaped references will never be expanded, regardless of whether the variable
                                              exists or not.
                                              Defaults to "".
                                            type: string
                                          valueFrom:
                                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                                            type: object
                                            properties:
                                              configMapKeyRef:
                                                description: Selects a key of a ConfigMap.
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key to select.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                    default: ""
                                                  optional:
                                                    description: Specify whether the ConfigMap or its key must be defined
                                                    type: boolean
                                                x-kubernetes-map-type: atomic
                                              fieldRef:
                                                description: |-
                                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                type: object
                                                required:
                                                  - fieldPath
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to select in the specified API version.
                                                    type: string
                                                x-kubernetes-map-type: atomic
                                              resourceFieldRef:
                                                description: |-
                                                  Selects a resource of the container: only resources limits and requests
                                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                type: object
                                                required:
                                                  - resource
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required for volumes, optional for env vars'
                                                    type: string
                                                  divisor:
                                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource to select'
                                                    type: string
                                                x-kubernetes-map-type: atomic
                                              secretKeyRef:
                                                description: Selects a key of a secret in the pod's namespace
                                                type: object
                                                required:
                                                  - key
                                                properties:
                                                  key:
                                                    description: The key of the secret to select from.  Must be a valid secret key.
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                    default: ""
                                                  optional:
                                                    description: Specify whether the Secret or its key must be defined
                                                    type: boolean
                                                x-kubernetes-map-type: atomic
                                      x-kubernetes-list-type: atomic
                                    stepName:
                                      description: StepName is the name of the step for whom these environment variables will be set.
                                      type: string
                                x-kubernetes-list-map-keys:
                                  - stepName
                                x-kubernetes-list-type: map
                              workspaceContents:
                                description: |-
                                  List of Workspaces with preset values, which will be initialized for any
                                  runs of the task under test.
                                type: array
                                items:
                                  description: |-
                                    InitialWorkspaceContents describes the desired contents of a workspace
                                    declared in the Task under Test before starting the test.
                                  type: object
                                  required:
                                    - name
                                    - objects
                                  properties:
                                    name:
                                      description: Name is the name of the workspace as declared by the Task under test.
                                      type: string
                                    objects:
                                      description: |-
                                        Objects is a list of file system objects to be placed in the specified
                                        workspace. Relative paths are interpreted from the root of the workspace,
                                        and for absolute paths the leading '/' denotes the root of the workspace.
                                        If the type chosen for the object is 'Directory', then an empty directory
                                        will be created at the location denoted by Path and Content must not be
                                        fille. I the type chosen for the object is 'TextFile', then a text file
                                        with Content as its content will be created at that location.
                                      type: array
                                      items:
                                        description: |-
                                          InputFileSystemObject describes a file system object to be placed when
                                          setting up a workspace for testing a Task by giving a path to the object, the
                                          type of the object and in case it is a text file the contents of that text
                                          file.
                                        type: object
                                        required:
                                          - path
                                          - type
                                        properties:
                                          content:
                                            description: |-
                                              The content of the file system object. Setting this value is only
                                              acceptable, if the field Type is set to 'TextFile'.
                                            type: string
                                          copyFrom:
                                            description: |-
                                              CopyFrom holds the name of a volume and a path within that volume. During
                                              setup the file system object at the specified path in CopyFrom is
                                              recursively copied to the path specified in this InputFileSystemObject.
                                              If CopyFrom is populated then Type or Content may not be populated, as
                                              well.
                                            type: object
                                            required:
                                              - path
                                              - volumeName
                                            properties:
                                              path:
                                                description: |-
                                                  Path is the path of the file system object to copy into the
                                                  workspace for the TaskTest. Relative paths are interpreted from
                                                  the root of the volume, while for absolute paths the leading
                                                  slash denotes the root of the volume.
                                                type: string
                                              volumeName:
                                                description: |-
                                                  VolumeName is the name of the volume to copy from. It must be in
                                                  the same namespace as this TaskTest.
                                                type: string
                                          path:
                                            description: |-
                                              Path is the path to this file system object. Relative paths are
                                              interpreted from the root of the workspace, and for absolute paths the
                                              leading '/' denotes the root of the workspace.
                                            type: string
                                          type:
                                            description: Type is the type of this file system object.
                                            type: string
                                      x-kubernetes-list-map-keys:
                                        - path
                                      x-kubernetes-list-type: map
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                          taskRef:
                            description: |-
                              TaskRef is a reference to a task definition, which must be in the same
                              namespace as the this test.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                type: string
                      timeout:
                        description: |-
                          Time after which one retry attempt times out. Defaults to 1 hour.
                          Refer Go's ParseDuration documentation for expected format: https://golang.org/pkg/time/#ParseDuration
                        type: string
                  x-kubernetes-list-type: atomic
  names:
    kind: TaskTestSuite
    plural: tasktestsuites
    singular: tasktestsuite
    categories:
      - tekton
      - tekton-pipelines
    shortNames:
      - ts
      - tss
  scope: Namespaced
